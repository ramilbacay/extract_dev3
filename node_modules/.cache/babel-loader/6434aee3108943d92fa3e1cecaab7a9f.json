{"ast":null,"code":"import _slicedToArray from \"C:\\\\xampp\\\\htdocs\\\\extract_dev3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\extract_dev3\\\\src\\\\components\\\\MainCard.js\";\nimport React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container';\nimport { BasicInput, SideButton, RegularButton, ReactSwitch } from './FormComponents.js';\nimport Row from 'react-bootstrap/Row';\n\nconst ReactCard = () => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        cluster = _useState2[0],\n        setCluster = _useState2[1];\n\n  const formik = useFormik({\n    initialValues: {\n      reqst_cd: '',\n      wflow_cd: '',\n      workflows: [],\n      cluster_switch: cluster\n    },\n    enableReinitialize: true,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return React.createElement(Container, {\n    className: \"mt-5 mb-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: formik.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Extract Script for Transport\"), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(BasicInput, {\n    id: \"reqst_cd\",\n    name: \"reqst_cd\",\n    value: formik.values.reqst_cd,\n    onChange: formik.handleChange,\n    col: \"6\",\n    placeholder: \"Request Code\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(BasicInput, {\n    id: \"wflow_cd\",\n    name: \"wflow_cd\",\n    value: formik.values.wflow_cd,\n    onChange: formik.handleChange,\n    col: \"6\",\n    placeholder: \"Workflow Code\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(SideButton, {\n    col: \"1\",\n    id: \"add_wflow\",\n    name: \"add_wflow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), this.state.other_wflow.map((cd, index) => React.createElement(Row, {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: \"11\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: `wflow_cd_${index}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Workflow Code\",\n    value: cd,\n    onChange: this.otherWflowChangeHandler(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(SideButton, {\n    use: \"delete\",\n    onClick: this.deleteWflow(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, formik.values.workflows.map(cd_index)), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(ReactSwitch, {\n    id: \"cluster_switch\",\n    name: \"cluster_switch\",\n    label: \"With Cluster?\",\n    checked: cluster,\n    onChange: () => setCluster(!cluster),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(RegularButton, {\n    col: \"10\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }))))));\n};\n\nexport default ReactCard;","map":{"version":3,"sources":["C:/xampp/htdocs/extract_dev3/src/components/MainCard.js"],"names":["React","useState","useFormik","Form","Card","Container","BasicInput","SideButton","RegularButton","ReactSwitch","Row","ReactCard","cluster","setCluster","formik","initialValues","reqst_cd","wflow_cd","workflows","cluster_switch","enableReinitialize","onSubmit","values","alert","JSON","stringify","handleSubmit","handleChange","state","other_wflow","map","cd","index","otherWflowChangeHandler","deleteWflow","cd_index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Container from 'react-bootstrap/Container';\r\nimport {BasicInput, SideButton, RegularButton, ReactSwitch} from './FormComponents.js';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nconst ReactCard = () => {\r\n\r\n    const [cluster, setCluster] = useState(false);\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n          reqst_cd: '',\r\n          wflow_cd: '',\r\n          workflows: [],\r\n          cluster_switch: cluster\r\n        },\r\n        enableReinitialize: true,\r\n        onSubmit: values => {\r\n          alert(JSON.stringify(values, null, 2));\r\n        },\r\n    });\r\n\r\n    \r\n    return(\r\n        <Container className=\"mt-5 mb-5\">\r\n            <Card>\r\n                <Card.Body>\r\n                    <Form onSubmit={formik.handleSubmit}>\r\n                        <Card.Title>Extract Script for Transport</Card.Title>\r\n                        <Row>\r\n                            <BasicInput id=\"reqst_cd\" name=\"reqst_cd\" value={formik.values.reqst_cd} onChange={formik.handleChange} col=\"6\" placeholder=\"Request Code\" type=\"text\" />\r\n                        </Row>\r\n                        <Row>\r\n                            <BasicInput id=\"wflow_cd\" name=\"wflow_cd\" value={formik.values.wflow_cd} onChange={formik.handleChange} col=\"6\" placeholder=\"Workflow Code\" type=\"text\" />\r\n                            <SideButton col=\"1\" id=\"add_wflow\" name=\"add_wflow\"/>\r\n                        </Row>\r\n                        {\r\n                            this.state.other_wflow.map((cd,index) =>\r\n                                <Row key={index}>\r\n                                    <Col md=\"11\">\r\n                                        <Form.Group controlId={`wflow_cd_${index}`}>\r\n                                            <Form.Control type=\"text\" placeholder=\"Workflow Code\" value={cd} onChange={this.otherWflowChangeHandler(index)} />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col md=\"1\">\r\n                                        <SideButton use=\"delete\" onClick={this.deleteWflow(index)} />\r\n                                    </Col>\r\n                                </Row>\r\n                            )\r\n                        }\r\n                        <Row>\r\n                            {\r\n                                formik.values.workflows.map((cd_index))\r\n                            }\r\n                        </Row>\r\n                        <Row>\r\n                            <ReactSwitch id=\"cluster_switch\" name=\"cluster_switch\" label=\"With Cluster?\" checked={cluster} onChange={() => setCluster(!cluster)} />\r\n                        </Row>\r\n                        <Row>\r\n                            <RegularButton col=\"10\" type=\"submit\" />\r\n                        </Row>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ReactCard;"]},"metadata":{},"sourceType":"module"}
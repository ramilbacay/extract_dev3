{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\extract_dev3\\\\src\\\\components\\\\MainCard.js\";\nimport React from 'react';\nimport { Form, Formik } from 'formik';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as Bs from 'react-bootstrap';\nimport * as Yup from 'yup';\nimport { RegularButton, MultipleInput, InputWithLabel } from './FormComponents.js';\nconst ValidForm = Yup.object().shape({\n  reqst_cd: Yup.string().required('Request code is required'),\n  workflows: Yup.string().required('Required'),\n  clusters: Yup.string().required('Required')\n});\n\nconst ReactCard = () => {\n  return React.createElement(Formik, {\n    initialValues: {\n      reqst_cd: '',\n      workflows: [],\n      cluster_switch: false,\n      clusters: []\n    },\n    validationSchema: ValidForm,\n    onSubmit: values => setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n    }, 500),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, ({\n    handleSubmit,\n    handleChange,\n    handleBlur,\n    values,\n    touched,\n    isValid,\n    errors\n  }) => React.createElement(Bs.Container, {\n    className: \"mt-5 mb-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Bs.Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Bs.Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Bs.Card.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Extract Script for Transport\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Bs.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(InputWithLabel, {\n    comp: Bs.Form.Control,\n    type: \"text\",\n    id: \"reqst_cd\",\n    name: \"reqst_cd\",\n    placeholder: \"Request Code\",\n    label: \"Request Code\",\n    errors: errors.reqst_cd,\n    touched: touched.reqst_cd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(MultipleInput, {\n    value: values.workflows,\n    name: \"workflows\",\n    item: \"workflow\",\n    placeholder: \"Workflow Code\",\n    button: \"Add Workflow\",\n    label: \"Workflow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(MultipleInput, {\n    value: values.clusters,\n    name: \"clusters\",\n    item: \"cluster\",\n    placeholder: \"Cluster Code\",\n    button: \"Add Cluster\",\n    label: \"Cluster\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(RegularButton, {\n    col: \"5\",\n    type: \"submit\",\n    size: \"lg\",\n    text: \"Extract\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }))))));\n};\n\nexport default ReactCard;","map":{"version":3,"sources":["C:/xampp/htdocs/extract_dev3/src/components/MainCard.js"],"names":["React","Form","Formik","Bs","Yup","RegularButton","MultipleInput","InputWithLabel","ValidForm","object","shape","reqst_cd","string","required","workflows","clusters","ReactCard","cluster_switch","values","setTimeout","alert","JSON","stringify","handleSubmit","handleChange","handleBlur","touched","isValid","errors","Control"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Form, Formik } from 'formik';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as Bs from 'react-bootstrap';\r\nimport * as Yup from 'yup';\r\n\r\nimport { RegularButton, MultipleInput, InputWithLabel} from './FormComponents.js';\r\n\r\nconst ValidForm = Yup.object().shape({\r\n    reqst_cd: Yup.string()\r\n        .required('Request code is required'),\r\n    workflows: Yup.string()\r\n        .required('Required'),\r\n    clusters: Yup.string()\r\n        .required('Required'),\r\n});\r\n\r\nconst ReactCard = () => {\r\n\r\n\r\n    return(\r\n        <Formik\r\n            initialValues={{ \r\n                reqst_cd: '',\r\n                workflows: [],\r\n                cluster_switch: false,\r\n                clusters: []\r\n            }}\r\n            validationSchema={ValidForm}\r\n            onSubmit={values =>\r\n                setTimeout(() => {\r\n                alert(JSON.stringify(values, null, 2));\r\n                }, 500)\r\n            }\r\n        >\r\n            {({ \r\n                handleSubmit,\r\n                handleChange,\r\n                handleBlur,\r\n                values,\r\n                touched,\r\n                isValid,\r\n                errors,\r\n            }) => (\r\n                <Bs.Container className=\"mt-5 mb-5\">\r\n                    <Bs.Card>\r\n                        <Bs.Card.Body>\r\n                            <Bs.Card.Title>Extract Script for Transport</Bs.Card.Title>\r\n                                <Form>\r\n                                    <Bs.Row>\r\n                                        <InputWithLabel\r\n                                            comp={Bs.Form.Control}\r\n                                            type=\"text\"\r\n                                            id=\"reqst_cd\"\r\n                                            name=\"reqst_cd\"\r\n                                            placeholder=\"Request Code\"\r\n                                            label=\"Request Code\"\r\n                                            errors={errors.reqst_cd}\r\n                                            touched={touched.reqst_cd}\r\n                                        />\r\n                                    </Bs.Row>\r\n                                    <MultipleInput value={values.workflows} name=\"workflows\" item=\"workflow\" placeholder=\"Workflow Code\" button=\"Add Workflow\" label=\"Workflow\" />\r\n                                    {/* <ReactSwitch label=\"With Cluster?\" name=\"cluster_switch\" id=\"cluster_switch\" col=\"5\" /> */}\r\n                                    <MultipleInput value={values.clusters} name=\"clusters\" item=\"cluster\" placeholder=\"Cluster Code\" button=\"Add Cluster\" label=\"Cluster\" />\r\n                                    <RegularButton col=\"5\" type=\"submit\" size=\"lg\" text=\"Extract\" />\r\n                                </Form>\r\n                        </Bs.Card.Body>\r\n                    </Bs.Card>\r\n                </Bs.Container>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default ReactCard;"]},"metadata":{},"sourceType":"module"}
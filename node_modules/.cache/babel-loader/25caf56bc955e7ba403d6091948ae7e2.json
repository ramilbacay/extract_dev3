{"ast":null,"code":"import _slicedToArray from \"C:\\\\xampp\\\\htdocs\\\\extract_dev3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\extract_dev3\\\\src\\\\components\\\\MainCard.js\";\nimport React, { useState } from 'react';\nimport { useFormik, Form, Formik, Field, FieldArray } from 'formik';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as Bs from 'react-bootstrap';\nimport { BasicInput, SideButton, RegularButton, ReactSwitch, FormControl } from './FormComponents.js';\n\nconst ReactCard = () => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        cluster = _useState2[0],\n        setCluster = _useState2[1];\n\n  return React.createElement(Formik, {\n    initialValues: {\n      reqst_cd: '',\n      wflow_cd: '',\n      workflows: ['test', 'tqwewe', 'asda'],\n      cluster_switch: cluster\n    },\n    onSubmit: values => setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n    }, 500),\n    render: ({\n      values\n    }) => React.createElement(Bs.Container, {\n      className: \"mt-5 mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Bs.Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Bs.Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Bs.Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Extract Script for Transport\"), React.createElement(Bs.Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Bs.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Bs.Col, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Bs.Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Field, {\n      as: Bs.Form.Control,\n      type: \"text\",\n      id: \"reqst_cd\",\n      name: \"reqst_cd\",\n      placeholder: \"First Name\",\n      col: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })))), React.createElement(FieldArray, {\n      name: \"workflows\",\n      render: arrayHelpers => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, values.workflows && values.workflows.length > 0 ? values.workflows.map((workflow, index) => React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: `workflows.${index}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => arrayHelpers.remove(index) // remove a friend from the list\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"-\"), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => arrayHelpers.push('') // insert an empty string at a position\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"+\"))) : React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => arrayHelpers.push(''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Add a friend\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Submit\"))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }))))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  });\n};\n\nexport default ReactCard;","map":{"version":3,"sources":["C:/xampp/htdocs/extract_dev3/src/components/MainCard.js"],"names":["React","useState","useFormik","Form","Formik","Field","FieldArray","Bs","BasicInput","SideButton","RegularButton","ReactSwitch","FormControl","ReactCard","cluster","setCluster","reqst_cd","wflow_cd","workflows","cluster_switch","values","setTimeout","alert","JSON","stringify","Control","arrayHelpers","length","map","workflow","index","remove","push"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useFormik, Form, Formik, Field, FieldArray } from 'formik';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nimport * as Bs from 'react-bootstrap';\r\n\r\nimport {BasicInput, SideButton, RegularButton, ReactSwitch, FormControl} from './FormComponents.js';\r\n\r\nconst ReactCard = () => {\r\n\r\n    const [cluster, setCluster] = useState(false);\r\n\r\n    return(\r\n        <Formik\r\n            initialValues={{ \r\n                reqst_cd: '',\r\n                wflow_cd: '',\r\n                workflows: ['test','tqwewe','asda'],\r\n                cluster_switch: cluster\r\n            }}\r\n            onSubmit={values =>\r\n                setTimeout(() => {\r\n                alert(JSON.stringify(values, null, 2));\r\n                }, 500)\r\n            }\r\n            render={({ values }) => (\r\n                <Bs.Container className=\"mt-5 mb-5\">\r\n                    <Bs.Card>\r\n                        <Bs.Card.Body>\r\n                            <Bs.Card.Title>Extract Script for Transport</Bs.Card.Title>\r\n                            <Bs.Form>\r\n                                <Bs.Row>\r\n                                    <Bs.Col md=\"6\">\r\n                                        <Bs.Form.Group>\r\n                                            <Field \r\n                                                as={Bs.Form.Control} \r\n                                                type=\"text\" \r\n                                                id=\"reqst_cd\" \r\n                                                name=\"reqst_cd\" \r\n                                                placeholder=\"First Name\"\r\n                                                col=\"6\"\r\n                                            />\r\n                                        </Bs.Form.Group>\r\n                                    </Bs.Col>\r\n                                </Bs.Row>\r\n                                <FieldArray\r\n                                    name=\"workflows\"\r\n                                    render={arrayHelpers => (\r\n                                    <div>\r\n                                        {values.workflows && values.workflows.length > 0 ? (\r\n                                        values.workflows.map((workflow, index) => (\r\n                                            <div key={index}>\r\n                                            <Field name={`workflows.${index}`} />\r\n                                            <button\r\n                                                type=\"button\"\r\n                                                onClick={() => arrayHelpers.remove(index)} // remove a friend from the list\r\n                                            >\r\n                                                -\r\n                                            </button>\r\n                                            <button\r\n                                                type=\"button\"\r\n                                                onClick={() => arrayHelpers.push('')} // insert an empty string at a position\r\n                                            >\r\n                                                +\r\n                                            </button>\r\n                                            </div>\r\n                                        ))\r\n                                        ) : (\r\n                                        <button type=\"button\" onClick={() => arrayHelpers.push('')}>\r\n                                            {/* show this when user has removed all friends from the list */}\r\n                                            Add a friend\r\n                                        </button>\r\n                                        )}\r\n                                        <div>\r\n                                        <button type=\"submit\">Submit</button>\r\n                                        </div>\r\n                                    </div>\r\n                                    )}\r\n                                />\r\n                            </Bs.Form>\r\n                        </Bs.Card.Body>\r\n                    </Bs.Card>\r\n                </Bs.Container>\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ReactCard;"]},"metadata":{},"sourceType":"module"}
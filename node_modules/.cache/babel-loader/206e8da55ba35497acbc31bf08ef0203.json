{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\extract_dev3\\\\src\\\\components\\\\ReportsCard.js\";\nimport React from 'react';\n\nclass ReportsCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(ReactAlert, {\n      display: this.state.alert_show,\n      class: this.state.alert_class,\n      title: this.state.alert_heading,\n      body: this.state.alert_body,\n      onClose: this.alertClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }), React.createElement(Formik, {\n      initialValues: {\n        users: this.state.users,\n        reqst_cd: '',\n        workflows: [],\n        cluster_switch: false,\n        clusters: [],\n        cluster_apvls: [],\n        dropdowns: [],\n        apps_cd: '',\n        // apps_owners: [],\n        wflow_cond_switch: false,\n        reqst_cond_switch: false,\n        condtn_cd: [],\n        cond_ctrls_switch: false,\n        form_validate_switch: false,\n        ws_apvl_switch: false,\n        ws_actv_switch: false\n      },\n      enableReinitialize: true,\n      validationSchema: ValidForm,\n      onSubmit: (values, {\n        setSubmitting,\n        resetForm\n      }) => {\n        const that = this;\n        fetch(\"http://10.15.10.250:8080/extract_dev2/extract_workflow\", {\n          method: 'POST',\n          mode: 'cors',\n          body: JSON.stringify(values, null, 2)\n        }).then(res => res.json()).then(result => {\n          {\n            /* console.log(result) */\n          }\n\n          if (result['error']) {\n            that.setState({\n              alert_show: true,\n              alert_class: 'alert-danger',\n              alert_heading: 'Error',\n              alert_body: result['data']\n            });\n            setSubmitting(false);\n          } else {\n            setSubmitting(false);\n            resetForm(values);\n            that.setState({\n              alert_show: true,\n              alert_class: 'alert-success',\n              alert_heading: 'Workflow Extracted',\n              alert_body: 'Script for transport has been extracted. Please check the files for the script and rollback.'\n            });\n          }\n        }, error => {\n          that.setState({\n            error\n          });\n          that.setState({\n            alert_show: true,\n            alert_class: 'alert-danger',\n            alert_heading: 'Error',\n            alert_body: 'There was an error processing your request. Please try again. Error: ' + error\n          });\n          console.log(error);\n          setSubmitting(false);\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, ({\n      handleSubmit,\n      handleChange,\n      handleBlur,\n      values,\n      touched,\n      isValid,\n      errors,\n      form,\n      isSubmitting,\n      formProps\n    }) => React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Bs.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(InputWithLabel, {\n      comp: Bs.Form.Control,\n      type: \"text\",\n      id: \"reqst_cd\",\n      name: \"reqst_cd\",\n      placeholder: \"Request Code\",\n      label: \"Request Code\",\n      errors: errors.reqst_cd,\n      touched: touched.reqst_cd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(Bs.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Bs.Col, {\n      md: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(MultipleInput, {\n      show: true,\n      value: values.workflows,\n      errors: errors.workflows,\n      touched: touched.workflows,\n      name: \"workflows\",\n      item: \"workflow\",\n      placeholder: \"Workflow Code\",\n      button: \"Add Workflow\",\n      label: \"Workflow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }))), React.createElement(Bs.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Bs.Col, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(MultipleInput, {\n      show: true,\n      value: values.clusters,\n      errors: errors.clusters,\n      touched: touched.clusters,\n      name: \"clusters\",\n      item: \"cluster\",\n      placeholder: \"Cluster Code\",\n      button: \"Add Cluster\",\n      label: \"Cluster\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })), React.createElement(Bs.Col, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(MultipleInput, {\n      show: true,\n      value: values.cluster_apvls,\n      errors: errors.cluster_apvls,\n      touched: touched.cluster_apvls,\n      name: \"cluster_apvls\",\n      item: \"cluster_apvls\",\n      placeholder: \"Cluster Approval Code\",\n      button: \"Add Cluster Approver\",\n      label: \"Cluster Approval\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }))), React.createElement(Bs.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Bs.Col, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(MultipleInput, {\n      show: true,\n      value: values.dropdowns,\n      errors: errors.dropdowns,\n      touched: touched.dropdowns,\n      name: \"dropdowns\",\n      item: \"dropdowns\",\n      placeholder: \"Field Name\",\n      button: \"Add Dropdown\",\n      label: \"Dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }))), React.createElement(Bs.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(InputWithLabel, {\n      comp: Bs.Form.Control,\n      type: \"text\",\n      id: \"apps_cd\",\n      name: \"apps_cd\",\n      placeholder: \"Application Code\",\n      label: \"Application Code\",\n      errors: errors.apps_cd,\n      touched: touched.apps_cd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })), React.createElement(ReactSwitch, {\n      id: \"wflow_cond_switch\",\n      name: \"wflow_cond_switch\",\n      label: \"With workflow condition?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(ReactSwitch, {\n      id: \"reqst_cond_switch\",\n      name: \"reqst_cond_switch\",\n      label: \"With request condition?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), React.createElement(MultipleInput, {\n      show: values.reqst_cond_switch,\n      value: values.condtn_cd,\n      errors: errors.condtn_cd,\n      touched: touched.condtn_cd,\n      name: \"condtn_cd\",\n      item: \"dropdowns\",\n      placeholder: \"Condition Code\",\n      button: \"Add Condition\",\n      label: \"Condition Code\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), React.createElement(ReactSwitch, {\n      id: \"cond_ctrls_switch\",\n      name: \"cond_ctrls_switch\",\n      label: \"With conditional control?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }), React.createElement(ReactSwitch, {\n      id: \"form_validate_switch\",\n      name: \"form_validate_switch\",\n      label: \"With trigger on Save/Finalize?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }), React.createElement(ReactSwitch, {\n      id: \"ws_apvl_switch\",\n      name: \"ws_apvl_switch\",\n      label: \"With trigger on approval?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }), React.createElement(ReactSwitch, {\n      id: \"ws_actv_switch\",\n      name: \"ws_actv_switch\",\n      label: \"With trigger when an activity is done?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), React.createElement(RegularButton, {\n      col: \"5\",\n      type: \"submit\",\n      size: \"lg\",\n      text: \"Extract\",\n      isSubmitting: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default ReportsCard;","map":{"version":3,"sources":["C:/xampp/htdocs/extract_dev3/src/components/ReportsCard.js"],"names":["React","ReportsCard","Component","constructor","props","state","render","alert_show","alert_class","alert_heading","alert_body","alertClose","users","reqst_cd","workflows","cluster_switch","clusters","cluster_apvls","dropdowns","apps_cd","wflow_cond_switch","reqst_cond_switch","condtn_cd","cond_ctrls_switch","form_validate_switch","ws_apvl_switch","ws_actv_switch","ValidForm","values","setSubmitting","resetForm","that","fetch","method","mode","body","JSON","stringify","then","res","json","result","setState","error","console","log","handleSubmit","handleChange","handleBlur","touched","isValid","errors","form","isSubmitting","formProps","Bs","Form","Control"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nclass ReportsCard extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <>\r\n                <ReactAlert \r\n                    display={this.state.alert_show}\r\n                    class={this.state.alert_class} \r\n                    title={this.state.alert_heading} \r\n                    body={this.state.alert_body} \r\n                    onClose={this.alertClose}\r\n                />\r\n                <Formik\r\n                    initialValues={{ \r\n                        users: this.state.users,\r\n                        reqst_cd: '',\r\n                        workflows: [],\r\n                        cluster_switch: false,\r\n                        clusters: [],\r\n                        cluster_apvls: [],\r\n                        dropdowns: [],\r\n                        apps_cd: '',\r\n                        // apps_owners: [],\r\n                        wflow_cond_switch: false,\r\n                        reqst_cond_switch: false,\r\n                        condtn_cd: [],\r\n                        cond_ctrls_switch: false,\r\n                        form_validate_switch: false,\r\n                        ws_apvl_switch: false,\r\n                        ws_actv_switch: false\r\n                    }}\r\n                    enableReinitialize\r\n                    validationSchema={ValidForm}\r\n                    onSubmit={( values, { setSubmitting, resetForm }) =>{\r\n\r\n                            const that = this;\r\n\r\n                            fetch(\"http://10.15.10.250:8080/extract_dev2/extract_workflow\", {\r\n                                    method: 'POST',\r\n                                    mode: 'cors',\r\n                                    body: JSON.stringify(values, null, 2)\r\n                                }\r\n                            )\r\n                            .then(res => res.json())\r\n                            .then(\r\n                                (result) => {\r\n\r\n                                    {/* console.log(result) */}\r\n                                    \r\n                                    if(result['error']){\r\n                                        that.setState({\r\n                                            alert_show: true,\r\n                                            alert_class: 'alert-danger',\r\n                                            alert_heading: 'Error',\r\n                                            alert_body: result['data']\r\n                                        });\r\n                                        setSubmitting(false)\r\n                                    }\r\n                                    else{\r\n                                        setSubmitting(false)\r\n                                        resetForm(values)\r\n                                        that.setState({\r\n                                            alert_show: true,\r\n                                            alert_class: 'alert-success',\r\n                                            alert_heading: 'Workflow Extracted',\r\n                                            alert_body: 'Script for transport has been extracted. Please check the files for the script and rollback.'\r\n                                        });\r\n                                    }\r\n                                    \r\n                                },\r\n                                \r\n                                (error) => {\r\n                                    that.setState({\r\n                                        error\r\n                                    });\r\n                                    that.setState({\r\n                                        alert_show: true,\r\n                                        alert_class: 'alert-danger',\r\n                                        alert_heading: 'Error',\r\n                                        alert_body: 'There was an error processing your request. Please try again. Error: ' + error\r\n                                    });\r\n                                    console.log(error);\r\n                                    setSubmitting(false);\r\n                                    \r\n                                }\r\n                            )\r\n                        }\r\n                    }\r\n                >\r\n                    {({ \r\n                        handleSubmit,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        values,\r\n                        touched,\r\n                        isValid,\r\n                        errors,\r\n                        form,\r\n                        isSubmitting,\r\n                        formProps\r\n                    }) => (\r\n                        \r\n                        <Form>\r\n                            <Bs.Row>\r\n                                <InputWithLabel\r\n                                    comp={Bs.Form.Control}\r\n                                    type=\"text\"\r\n                                    id=\"reqst_cd\"\r\n                                    name=\"reqst_cd\"\r\n                                    placeholder=\"Request Code\"\r\n                                    label=\"Request Code\"\r\n                                    errors={errors.reqst_cd}\r\n                                    touched={touched.reqst_cd}\r\n                                />\r\n                            </Bs.Row>\r\n                            <Bs.Row>\r\n                                <Bs.Col md=\"12\">\r\n                                    <MultipleInput \r\n                                        show={true}\r\n                                        value={values.workflows} \r\n                                        errors={errors.workflows} \r\n                                        touched={touched.workflows} \r\n                                        name=\"workflows\" \r\n                                        item=\"workflow\" \r\n                                        placeholder=\"Workflow Code\" \r\n                                        button=\"Add Workflow\" \r\n                                        label=\"Workflow\" \r\n                                    />\r\n                                </Bs.Col>\r\n                            </Bs.Row>\r\n                        \r\n                            {/* <ReactSwitch label=\"With Cluster?\" name=\"cluster_switch\" id=\"cluster_switch\" col=\"5\" /> */}\r\n                            <Bs.Row>\r\n                                <Bs.Col md=\"6\">\r\n                                    <MultipleInput \r\n                                        show={true}\r\n                                        value={values.clusters} \r\n                                        errors={errors.clusters} \r\n                                        touched={touched.clusters} \r\n                                        name=\"clusters\" \r\n                                        item=\"cluster\" \r\n                                        placeholder=\"Cluster Code\" \r\n                                        button=\"Add Cluster\" \r\n                                        label=\"Cluster\" \r\n                                    />\r\n                                </Bs.Col>\r\n                                <Bs.Col md=\"6\">\r\n                                    <MultipleInput \r\n                                        show={true}\r\n                                        value={values.cluster_apvls} \r\n                                        errors={errors.cluster_apvls} \r\n                                        touched={touched.cluster_apvls} \r\n                                        name=\"cluster_apvls\" \r\n                                        item=\"cluster_apvls\" \r\n                                        placeholder=\"Cluster Approval Code\" \r\n                                        button=\"Add Cluster Approver\" \r\n                                        label=\"Cluster Approval\" \r\n                                    />\r\n                                </Bs.Col>\r\n                            </Bs.Row>\r\n                            \r\n                            <Bs.Row>\r\n                                <Bs.Col md=\"6\">\r\n                                    <MultipleInput \r\n                                        show={true}\r\n                                        value={values.dropdowns} \r\n                                        errors={errors.dropdowns} \r\n                                        touched={touched.dropdowns} \r\n                                        name=\"dropdowns\" \r\n                                        item=\"dropdowns\" \r\n                                        placeholder=\"Field Name\" \r\n                                        button=\"Add Dropdown\" \r\n                                        label=\"Dropdown\" \r\n                                    />\r\n                                </Bs.Col>\r\n                            </Bs.Row>\r\n                            \r\n                            <Bs.Row>\r\n                                <InputWithLabel\r\n                                    comp={Bs.Form.Control}\r\n                                    type=\"text\"\r\n                                    id=\"apps_cd\"\r\n                                    name=\"apps_cd\"\r\n                                    placeholder=\"Application Code\"\r\n                                    label=\"Application Code\"\r\n                                    errors={errors.apps_cd}\r\n                                    touched={touched.apps_cd}\r\n                                />\r\n                            </Bs.Row>\r\n                            {/* <MultipleInput \r\n                                value={values.apps_owners} \r\n                                name=\"apps_owners\" \r\n                                item=\"apps_owners\" \r\n                                placeholder=\"Application Owner\" \r\n                                button=\"Add Application Owner\" \r\n                                label=\"Application Owner\" \r\n                                errors={errors.apps_owners}\r\n                            /> */}\r\n                            <ReactSwitch\r\n                                id=\"wflow_cond_switch\"\r\n                                name=\"wflow_cond_switch\"\r\n                                label=\"With workflow condition?\"\r\n                            />\r\n                            <ReactSwitch\r\n                                id=\"reqst_cond_switch\"\r\n                                name=\"reqst_cond_switch\"\r\n                                label=\"With request condition?\"\r\n                            />\r\n                            <MultipleInput \r\n                                show={values.reqst_cond_switch}\r\n                                value={values.condtn_cd} \r\n                                errors={errors.condtn_cd} \r\n                                touched={touched.condtn_cd} \r\n                                name=\"condtn_cd\" \r\n                                item=\"dropdowns\" \r\n                                placeholder=\"Condition Code\" \r\n                                button=\"Add Condition\" \r\n                                label=\"Condition Code\" \r\n                            />\r\n                            <ReactSwitch\r\n                                id=\"cond_ctrls_switch\"\r\n                                name=\"cond_ctrls_switch\"\r\n                                label=\"With conditional control?\"\r\n                            />\r\n                            <ReactSwitch\r\n                                id=\"form_validate_switch\"\r\n                                name=\"form_validate_switch\"\r\n                                label=\"With trigger on Save/Finalize?\"\r\n                            />\r\n                            <ReactSwitch\r\n                                id=\"ws_apvl_switch\"\r\n                                name=\"ws_apvl_switch\"\r\n                                label=\"With trigger on approval?\"\r\n                            />\r\n                            <ReactSwitch\r\n                                id=\"ws_actv_switch\"\r\n                                name=\"ws_actv_switch\"\r\n                                label=\"With trigger when an activity is done?\"\r\n                            />\r\n\r\n\r\n                            <RegularButton \r\n                                col=\"5\" \r\n                                type=\"submit\" \r\n                                size=\"lg\" \r\n                                text=\"Extract\" \r\n                                isSubmitting={isSubmitting} \r\n                            />\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ReportsCard;"]},"metadata":{},"sourceType":"module"}
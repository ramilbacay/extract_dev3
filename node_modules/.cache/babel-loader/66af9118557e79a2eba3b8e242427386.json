{"ast":null,"code":"import _slicedToArray from \"C:\\\\xampp\\\\htdocs\\\\extract_dev3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\extract_dev3\\\\src\\\\components\\\\FormComponents.js\";\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as Bs from 'react-bootstrap';\nimport { FaPlus, FaMinus } from 'react-icons/fa';\nimport { useField, Field, FieldArray, ErrorMessage } from 'formik';\nimport '../App.css';\n\nfunction handleTabPress(data, event) {}\n\nfunction ReactAlert(props) {\n  // console.log(props.display);\n  // const [show, setShow] = useState(props.display);\n  if (props.display) {\n    return React.createElement(Bs.Modal, {\n      show: props.display,\n      onHide: () => props.onClose(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(Bs.Modal.Header, {\n      className: props.class,\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(Bs.Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, props.title)), React.createElement(Bs.Modal.Body, {\n      className: props.class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, props.body));\n  }\n\n  return null;\n}\n\nfunction InputWithLabel(props) {\n  return React.createElement(React.Fragment, null, React.createElement(Bs.Col, {\n    md: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Bs.Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    label: props.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Field, {\n    as: props.comp,\n    type: props.type,\n    id: props.id,\n    name: props.name,\n    placeholder: props.placeholder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(ErrorMessage, {\n    name: props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })))));\n}\n\nfunction BasicInput(props) {\n  return React.createElement(React.Fragment, null, React.createElement(Bs.Col, {\n    md: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Bs.Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Field, {\n    as: props.comp,\n    type: props.type,\n    id: props.id,\n    name: props.name,\n    placeholder: props.placeholder,\n    onKeyDown: props.onKeyDown,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), typeof props.errors === 'string' ? null : React.createElement(Bs.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Bs.Col, {\n    md: \"12\",\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Bs.Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(ErrorMessage, {\n    name: props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })))))));\n}\n\nfunction SideButton(props) {\n  var icon = \"\";\n  var variant = \"\";\n\n  if (props.use === \"add\") {\n    icon = React.createElement(FaPlus, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    });\n    variant = \"outline-primary\";\n  } else {\n    icon = React.createElement(FaMinus, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    });\n    variant = \"outline-danger\";\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Bs.Col, {\n    md: props.col,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Bs.Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Bs.Button, {\n    variant: variant,\n    className: \"btn-circle\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, icon))));\n}\n\nfunction FormButton(props) {\n  return React.createElement(React.Fragment, null, React.createElement(Bs.Col, {\n    md: props.col,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Bs.Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Bs.Button, {\n    variant: \"outline-primary\",\n    size: props.size,\n    type: props.type,\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, props.text))));\n}\n\nfunction RegularButton(props) {\n  const isSubmitting = props.isSubmitting ? true : false;\n  var className = \"mx-auto text-center\";\n\n  if (props.type !== \"submit\") {\n    className = \"\";\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Bs.Col, {\n    md: props.col,\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Bs.Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(Bs.Button, {\n    variant: \"outline-primary\",\n    size: props.size,\n    type: props.type,\n    disabled: isSubmitting,\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, props.text))));\n}\n\nfunction ReactSwitch(props) {\n  const _useField = useField(props.name),\n        _useField2 = _slicedToArray(_useField, 3),\n        field = _useField2[0],\n        meta = _useField2[1],\n        helpers = _useField2[2];\n\n  const value = meta.value;\n  const setValue = helpers.setValue;\n  return React.createElement(React.Fragment, null, React.createElement(Bs.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(Bs.Col, {\n    md: props.col,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(Bs.Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(Bs.Form.Check, {\n    type: \"switch\",\n    id: props.id,\n    name: props.name,\n    label: props.label,\n    checked: value,\n    onChange: () => setValue(!value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  })))));\n}\n\nfunction ConditionInput(props) {\n  if (props.show) {\n    return React.createElement(React.Fragment, null, React.createElement(Bs.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(InputWithLabel, {\n      comp: Bs.Form.Control,\n      type: props.type,\n      id: props.id,\n      name: props.name,\n      placeholder: props.placeholder,\n      label: props.label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })));\n  }\n\n  return null;\n}\n\nfunction FormLabel(props) {\n  return React.createElement(Bs.Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, props.label);\n}\n\nfunction LabelWithTip(props) {\n  return React.createElement(React.Fragment, null, React.createElement(Bs.Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, props.label), React.createElement(Bs.Form.Text, {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, \"Tip: You can press tab while inside the input box to automatically add a new row.\"));\n}\n\nclass MultipleInput extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    if (this.props.show) {\n      return React.createElement(React.Fragment, null, React.createElement(FieldArray, {\n        name: this.props.name,\n        render: arrayHelpers => React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }, React.createElement(LabelWithTip, {\n          label: this.props.label,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }), this.props.value && this.props.value.length > 0 ? this.props.value.map((value, index) => React.createElement(Bs.Row, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }, React.createElement(Field, {\n          as: BasicInput,\n          comp: Bs.Form.Control,\n          name: `${this.props.name}.${index}`,\n          placeholder: this.props.placeholder,\n          parent: this.props.name,\n          errors: this.props.errors,\n          onKeyDown: this.props.keydown,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }), React.createElement(SideButton, {\n          col: \"1\",\n          use: \"subtract\",\n          onClick: () => arrayHelpers.remove(index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        }), React.createElement(SideButton, {\n          col: \"1\",\n          use: \"add\",\n          onClick: () => arrayHelpers.push(''),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254\n          },\n          __self: this\n        }))) : React.createElement(Bs.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263\n          },\n          __self: this\n        }, React.createElement(FormButton, {\n          type: \"button\",\n          size: \"small\",\n          onClick: () => arrayHelpers.push(''),\n          text: this.props.button,\n          name: this.props.name,\n          errors: this.props.errors,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264\n          },\n          __self: this\n        })), typeof this.props.errors === 'string' ? React.createElement(Bs.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        }, React.createElement(Bs.Col, {\n          md: \"6\",\n          className: \"text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278\n          },\n          __self: this\n        }, React.createElement(Bs.Form.Group, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          },\n          __self: this\n        }, React.createElement(ErrorMessage, {\n          name: this.props.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280\n          },\n          __self: this\n        })))) : null),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }));\n    }\n\n    return null;\n  }\n\n}\n\nexport { BasicInput, SideButton, RegularButton, ReactSwitch, MultipleInput, FormLabel, InputWithLabel, ConditionInput, ReactAlert };","map":{"version":3,"sources":["C:/xampp/htdocs/extract_dev3/src/components/FormComponents.js"],"names":["React","useState","Bs","FaPlus","FaMinus","useField","Field","FieldArray","ErrorMessage","handleTabPress","data","event","ReactAlert","props","display","onClose","class","title","body","InputWithLabel","label","comp","type","id","name","placeholder","BasicInput","onKeyDown","errors","SideButton","icon","variant","use","col","onClick","FormButton","size","text","RegularButton","isSubmitting","className","ReactSwitch","field","meta","helpers","value","setValue","ConditionInput","show","Form","Control","FormLabel","LabelWithTip","MultipleInput","Component","constructor","render","arrayHelpers","length","map","index","keydown","remove","push","button"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as Bs from 'react-bootstrap';\r\nimport {FaPlus, FaMinus} from 'react-icons/fa';\r\nimport { useField, Field, FieldArray, ErrorMessage  } from 'formik';\r\nimport '../App.css';\r\n\r\nfunction handleTabPress(data, event){\r\n\r\n}\r\n\r\nfunction ReactAlert(props){\r\n    // console.log(props.display);\r\n    // const [show, setShow] = useState(props.display);\r\n    if (props.display) {\r\n        return(\r\n            <Bs.Modal show={props.display} onHide={() => props.onClose()}>\r\n                <Bs.Modal.Header className={props.class} closeButton>\r\n                    <Bs.Modal.Title>{props.title}</Bs.Modal.Title>\r\n                </Bs.Modal.Header>\r\n                <Bs.Modal.Body className={props.class}>\r\n                    {props.body}    \r\n                </Bs.Modal.Body>\r\n            </Bs.Modal>\r\n        );\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction InputWithLabel(props){\r\n    return(\r\n        <>\r\n            <Bs.Col md=\"6\">\r\n                <Bs.Form.Group>\r\n                    <FormLabel label={props.label} />\r\n                    <Field \r\n                        as={props.comp} \r\n                        type={props.type}\r\n                        id={props.id}\r\n                        name={props.name}\r\n                        placeholder={props.placeholder}\r\n                    />\r\n                    <div className=\"text-danger\">\r\n                        <ErrorMessage name={props.name} />\r\n                    </div>\r\n                </Bs.Form.Group>\r\n            </Bs.Col>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction BasicInput(props){\r\n    return(\r\n        <>\r\n            <Bs.Col md=\"6\">\r\n                <Bs.Form.Group>\r\n                    <Field \r\n                        as={props.comp} \r\n                        type={props.type}\r\n                        id={props.id}\r\n                        name={props.name}\r\n                        placeholder={props.placeholder}\r\n                        onKeyDown={props.onKeyDown}\r\n                    />\r\n                    {\r\n                        typeof props.errors === 'string' ?\r\n                            null\r\n                        :\r\n                            <Bs.Row>\r\n                                <Bs.Col md=\"12\" className=\"text-danger\">\r\n                                    <Bs.Form.Group>\r\n                                        <ErrorMessage name={props.name} />\r\n                                    </Bs.Form.Group>\r\n                                </Bs.Col>\r\n                            </Bs.Row>\r\n                    }\r\n                    \r\n                </Bs.Form.Group>\r\n            </Bs.Col>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction SideButton(props){\r\n    var icon = \"\";\r\n    var variant = \"\";\r\n    if(props.use === \"add\"){\r\n        icon = <FaPlus />;\r\n        variant = \"outline-primary\";\r\n    }\r\n    else{\r\n        icon = <FaMinus />;\r\n        variant = \"outline-danger\";\r\n    }\r\n    return(\r\n        <>\r\n            <Bs.Col md={props.col}>\r\n                <Bs.Form.Group>\r\n                    <Bs.Button \r\n                        variant={variant} \r\n                        className=\"btn-circle\" \r\n                        onClick={props.onClick}\r\n                    >\r\n                        {icon}\r\n                    </Bs.Button>\r\n                </Bs.Form.Group>\r\n            </Bs.Col>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction FormButton(props){\r\n    return(\r\n        <>\r\n            <Bs.Col md={props.col}>\r\n                <Bs.Form.Group>\r\n                    <Bs.Button \r\n                        variant=\"outline-primary\" \r\n                        size={props.size} \r\n                        type={props.type} \r\n                        onClick={props.onClick}\r\n                    >\r\n                        {props.text}\r\n                    </Bs.Button>\r\n                </Bs.Form.Group>\r\n            </Bs.Col>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction RegularButton(props){\r\n    const isSubmitting = props.isSubmitting ? true : false;\r\n    var className = \"mx-auto text-center\";\r\n    if(props.type !== \"submit\"){\r\n        className = \"\";\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Bs.Col md={props.col} className={className}>\r\n                <Bs.Form.Group>\r\n                    <Bs.Button \r\n                        variant=\"outline-primary\" \r\n                        size={props.size} \r\n                        type={props.type} \r\n                        disabled={isSubmitting}\r\n                        onClick={props.onClick}\r\n                    >\r\n                        {props.text}\r\n                    </Bs.Button>\r\n                </Bs.Form.Group>\r\n            </Bs.Col>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction ReactSwitch(props){\r\n    const [ field, meta, helpers] = useField(props.name);\r\n    const { value } = meta;\r\n    const { setValue } = helpers;\r\n    return(\r\n        <>\r\n            <Bs.Row>\r\n                <Bs.Col md={props.col}>\r\n                    <Bs.Form.Group>\r\n                        <Bs.Form.Check \r\n                            type=\"switch\"\r\n                            id={props.id}\r\n                            name={props.name}\r\n                            label={props.label}\r\n                            checked={value}\r\n                            onChange={() => setValue(!value)}\r\n                        />\r\n                    </Bs.Form.Group>\r\n                </Bs.Col>\r\n            </Bs.Row>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction ConditionInput(props){\r\n\r\n    if(props.show){\r\n        return(\r\n            <> \r\n                <Bs.Row>\r\n                    <InputWithLabel\r\n                        comp={Bs.Form.Control}\r\n                        type={props.type}\r\n                        id={props.id}\r\n                        name={props.name}\r\n                        placeholder={props.placeholder}\r\n                        label={props.label}\r\n                    />\r\n                </Bs.Row>\r\n            </>\r\n        );\r\n    }\r\n        return null;\r\n}\r\n\r\nfunction FormLabel(props){\r\n    return(\r\n        <Bs.Form.Label>{props.label}</Bs.Form.Label>\r\n    );\r\n}\r\n\r\nfunction LabelWithTip(props){\r\n    return(\r\n        <>\r\n            <Bs.Form.Label>{props.label}</Bs.Form.Label>\r\n            <Bs.Form.Text className=\"text-muted\">\r\n                Tip: You can press tab while inside the input box to automatically add a new row.\r\n            </Bs.Form.Text>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nclass MultipleInput extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    \r\n    render(){\r\n        if(this.props.show){\r\n            return(\r\n                <>\r\n                    <FieldArray\r\n                        name={this.props.name}\r\n                        render={\r\n                            arrayHelpers => (\r\n                                <div>\r\n                                    <LabelWithTip label={this.props.label} />\r\n                                    {\r\n                                        \r\n                                        this.props.value && this.props.value.length > 0 ? (\r\n                                            this.props.value.map((value, index) => (\r\n                                                <Bs.Row key={index}>\r\n                                                        <Field \r\n                                                            as={BasicInput} \r\n                                                            comp={Bs.Form.Control} \r\n                                                            name={`${this.props.name}.${index}`} \r\n                                                            placeholder={this.props.placeholder}\r\n                                                            parent={this.props.name}\r\n                                                            errors={this.props.errors}\r\n                                                            onKeyDown={this.props.keydown}\r\n                                                        />\r\n                                                        <SideButton\r\n                                                            col=\"1\"\r\n                                                            use=\"subtract\"\r\n                                                            onClick={() => arrayHelpers.remove(index)} \r\n                                                        />\r\n                                                        <SideButton\r\n                                                            col=\"1\"\r\n                                                            use=\"add\"\r\n                                                            onClick={() => arrayHelpers.push('')}\r\n                                                        />\r\n                                                </Bs.Row>\r\n                                            ))\r\n                                        ) : \r\n                                        (\r\n                                            <Bs.Row>\r\n                                                <FormButton \r\n                                                    type=\"button\" \r\n                                                    size=\"small\" \r\n                                                    onClick={() => arrayHelpers.push('')} \r\n                                                    text={this.props.button}\r\n                                                    name={this.props.name}\r\n                                                    errors={this.props.errors}\r\n                                                /> \r\n                                            </Bs.Row>\r\n                                        )\r\n                                    }\r\n                                    {\r\n                                        typeof this.props.errors === 'string' ?\r\n                                            <Bs.Row>\r\n                                                <Bs.Col md=\"6\" className=\"text-danger\">\r\n                                                    <Bs.Form.Group>\r\n                                                        <ErrorMessage name={this.props.name} />\r\n                                                    </Bs.Form.Group>\r\n                                                </Bs.Col>\r\n                                            </Bs.Row>\r\n                                        :\r\n                                            null\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        }\r\n                    />\r\n                </>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\nexport  {\r\n    BasicInput,\r\n    SideButton,\r\n    RegularButton,\r\n    ReactSwitch,\r\n    MultipleInput,\r\n    FormLabel,\r\n    InputWithLabel,\r\n    ConditionInput,\r\n    ReactAlert\r\n};"]},"metadata":{},"sourceType":"module"}